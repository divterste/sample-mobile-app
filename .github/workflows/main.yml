# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    
    test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: subosito/flutter-action@v1.5.3
      - name: Install packages
        run: flutter pub get
      - name: Run generator
        run: flutter pub run build_runner build
      - name: Run test
        run: flutter test test
  
    Apple:
      runs-on: macOS-latest
      
      steps:
        - uses: actions/checkout@v3
        - name: Build & Produce
          run: |
            cd ios && xcodebuild archive \
              -workspace appname.xcworkspace \
              -scheme appname \
              -sdk iphoneos13.2 \
              -configuration Release \
              -archivePath $PWD/build/appname.xcarchive \
              IPHONEOS_DEPLOYMENT_TARGET=9.0
              PROVISIONING_PROFILE="UUID HERE" \
              CODE_SIGN_IDENTITY="iPhone Distribution:Some Company (T343ff)"
              

    # This workflow contains a single job called "build"
    Google:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v3

        - name: Initialize gradle
          run: gradle init

        - name: Build & Produce
          run: ./gradlew build 
      
        
        
